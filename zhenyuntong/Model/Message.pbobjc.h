// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum IMMessage_MessageType

typedef GPB_ENUM(IMMessage_MessageType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  IMMessage_MessageType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  IMMessage_MessageType_None = 0,
  IMMessage_MessageType_Login = 1,
  IMMessage_MessageType_Send = 2,
  IMMessage_MessageType_Reply = 3,
  IMMessage_MessageType_Ping = 4,
  IMMessage_MessageType_Exit = 5,
  IMMessage_MessageType_ReplyLogin = 6,
  IMMessage_MessageType_ReplyExit = 7,
  IMMessage_MessageType_Squeeze = 8,
};

GPBEnumDescriptor *IMMessage_MessageType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL IMMessage_MessageType_IsValidValue(int32_t value);

#pragma mark - Enum IMMessage_MessageState

typedef GPB_ENUM(IMMessage_MessageState) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  IMMessage_MessageState_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  IMMessage_MessageState_Statenone = 0,
  IMMessage_MessageState_Waitsend = 1,
  IMMessage_MessageState_Sending = 2,
  IMMessage_MessageState_Success = 3,
  IMMessage_MessageState_Failure = 4,
};

GPBEnumDescriptor *IMMessage_MessageState_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL IMMessage_MessageState_IsValidValue(int32_t value);

#pragma mark - MessageRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface MessageRoot : GPBRootObject
@end

#pragma mark - IMMessage

typedef GPB_ENUM(IMMessage_FieldNumber) {
  IMMessage_FieldNumber_SenderId = 1,
  IMMessage_FieldNumber_MessageType = 2,
  IMMessage_FieldNumber_MessageState = 3,
  IMMessage_FieldNumber_ReceiveId = 4,
  IMMessage_FieldNumber_Content = 5,
  IMMessage_FieldNumber_SendTime = 6,
  IMMessage_FieldNumber_MsgId = 7,
  IMMessage_FieldNumber_SendCount = 8,
};

@interface IMMessage : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *senderId;

@property(nonatomic, readwrite) IMMessage_MessageType messageType;

@property(nonatomic, readwrite) IMMessage_MessageState messageState;

@property(nonatomic, readwrite, copy, null_resettable) NSString *receiveId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@property(nonatomic, readwrite) int64_t sendTime;

@property(nonatomic, readwrite) int64_t msgId;

@property(nonatomic, readwrite) int32_t sendCount;

@end

/**
 * Fetches the raw value of a @c IMMessage's @c messageType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t IMMessage_MessageType_RawValue(IMMessage *message);
/**
 * Sets the raw value of an @c IMMessage's @c messageType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetIMMessage_MessageType_RawValue(IMMessage *message, int32_t value);

/**
 * Fetches the raw value of a @c IMMessage's @c messageState property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t IMMessage_MessageState_RawValue(IMMessage *message);
/**
 * Sets the raw value of an @c IMMessage's @c messageState property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetIMMessage_MessageState_RawValue(IMMessage *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
